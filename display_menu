package com.example.paint;

import javafx.embed.swing.SwingFXUtils;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.*;
import javafx.scene.canvas.Canvas;
import javafx.scene.control.Button;
import javafx.scene.control.MenuBar;
import javafx.scene.control.Menu;
import javafx.scene.control.MenuItem;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.image.WritableImage;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.stage.FileChooser;
import javafx.stage.Stage;

import javax.imageio.ImageIO;
import java.awt.image.RenderedImage;
import java.io.*;
import java.util.Collection;
import java.util.logging.Level;
import java.util.logging.Logger;


public class display_menu {
    protected MenuBar menubar;
    private static Canvas canvas1;
    private Menu file;
    private MenuItem op_item;
    private MenuItem s_item;
    private MenuItem sa_item;
    private VBox vbox;
    private static ImageView imageview;
    private File file2;
    public display_menu(){
        // Creates Menu bar
        menubar = new MenuBar();

        // Creates File bar
        file = new Menu("File");
        op_item = new MenuItem("Open");
        s_item = new MenuItem("Save");
        sa_item = new MenuItem("Save as");
        file.getItems().addAll(op_item, s_item, sa_item);
        menubar.getMenus().add(file);
        vbox = new VBox(menubar);
        imageview = new ImageView();

        // Creates canvas
        canvas1 = new Canvas(400.0, 400.0);
        Main.get_pane().setCenter(canvas1);

        //File bar options
        // Opens image
        op_item.setOnAction(o->{
            open_image();

        });
        // Save
        s_item.setOnAction(p->{
            save(Main.get_stage(), file2, imageview);
        });
        //Save as
        sa_item.setOnAction(l->{
            save_as(Main.get_stage(), file2, imageview);
        });
    }

    public VBox get_vbox(){
        return this.vbox;
    }

    public ImageView get_imageview(){
        return this.imageview;
    }

    public Canvas get_canvas(){
        return this.canvas1;
    }

    public static void open_image() {
        // Creates file chooser
        Stage stage = new Stage();
        stage.setTitle("Open");
        final FileChooser fileChooser = new FileChooser();
        File file1 = fileChooser.showOpenDialog(stage);

        // Loads image
        Image image = new Image(file1.toURI().toString());
        imageview = new ImageView(image);
        Main.get_pane().setCenter(imageview);

        // Changes canvas size
        canvas1.setHeight(image.getHeight());
        canvas1.setWidth(image.getWidth());
    }

    public static void save(Stage stage, File file, ImageView imgView) {
        //FileChooser filechooser = new FileChooser();
        //file = filechooser.showSaveDialog(stage);
        SnapshotParameters snap = new SnapshotParameters();
        if (file != null){
            try {
                // Saves image
                WritableImage image = imgView.snapshot(snap, null);
                RenderedImage renderedImage = SwingFXUtils.fromFXImage(image, null);
                ImageIO.write(renderedImage, "png", file);
            }
            catch (IOException exception){
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null, exception);
            }
        }
    }

    public static void save_as(Stage stage, File file, ImageView imgView) {
        // Creates file chooser
        FileChooser filechooser = new FileChooser();
        file = filechooser.showSaveDialog(stage);
        SnapshotParameters snap = new SnapshotParameters();
        if (file != null){
            try {
                // Saves image
                WritableImage image = imgView.snapshot(snap, null);
                RenderedImage renderedImage = SwingFXUtils.fromFXImage(image, null);
                ImageIO.write(renderedImage, "png", file);
            }
            catch (IOException exception){
                Logger.getLogger(Main.class.getName()).log(Level.SEVERE,null, exception);
            }
        }
    }

}
